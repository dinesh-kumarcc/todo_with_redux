{"ast":null,"code":"var _jsxFileName = \"/home/codecorners/demo/redux-todo-app/src/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo, deleteTodo } from './actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddTodo = _ref => {\n  _s();\n\n  let {\n    dispatch\n  } = _ref;\n  const record = useSelector(state => state); //   const handleRemoveCourse = course => {\n  //     useSelector({\n  //     type: 'REMOVE_COURSE',\n  //     // payload: course\n  //   });\n  // }\n\n  console.log(record, 'recordddd');\n  let input; // useEffect(()=>{\n  //     list = dispatch({\n  //         type:'TODO',\n  //         payload:state\n  //     })\n  //     console.log(list,'listtttttttttttttt',state)\n  // },[])\n\n  useEffect(() => {\n    // console.log(counter,'eeeeeeeeeeeeeeeeeeeeeeeeeeeeee')\n    let data = JSON.parse(localStorage.getItem('persistantState'));\n    console.log(data, '..........................');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n\n          if (!input.value.trim()) {\n            return;\n          }\n\n          dispatch(addTodo(input.value));\n          input.value = '';\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: node => input = node\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), record ? record.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.text, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => dispatch(deleteTodo(item.id)),\n              children: \"delete\"\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      }) : 'no record']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddTodo, \"HEzVxdeiqp+M5VyQDzfoCKHjLHc=\", false, function () {\n  return [useSelector];\n});\n\n_c = AddTodo;\nexport default connect()(AddTodo); // let data = [];\n// data = JSON.parse(localStorage.getItem('data'))\n// console.log(data,'=========================')\n// return data.map(todo => {\n//     return (todo)\n// }\n// )\n//  (todo.id === action.id)\n// ? {...todo, completed: !todo.completed}\n// : todo\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/home/codecorners/demo/redux-todo-app/src/Todo.js"],"names":["React","useEffect","connect","addTodo","deleteTodo","useDispatch","useSelector","AddTodo","dispatch","record","state","console","log","input","data","JSON","parse","localStorage","getItem","e","preventDefault","value","trim","node","map","item","index","text","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,WAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;AAEA,MAAMC,OAAO,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAEhC,QAAMC,MAAM,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAV,CAA1B,CAFgC,CAIhC;AACA;AACA;AACA;AACA;AACA;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAoB,WAApB;AAEA,MAAII,KAAJ,CAbgC,CAiBhC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIa,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAX;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ,EAAiB,4BAAjB;AACD,GAJQ,EAIN,EAJM,CAAT;AAOA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEK,CAAC,IAAI;AACnBA,UAAAA,CAAC,CAACC,cAAF;;AACA,cAAI,CAACP,KAAK,CAACQ,KAAN,CAAYC,IAAZ,EAAL,EAAyB;AACvB;AACD;;AACDd,UAAAA,QAAQ,CAACL,OAAO,CAACU,KAAK,CAACQ,KAAP,CAAR,CAAR;AACAR,UAAAA,KAAK,CAACQ,KAAN,GAAc,EAAd;AACD,SAPD;AAAA,gCAQE;AAAO,UAAA,GAAG,EAAEE,IAAI,IAAIV,KAAK,GAAGU;AAA5B;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAsBE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGd,MAAM,GAAGA,MAAM,CAACe,GAAP,CAAW,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC/B,4BACI;AAAA,iCACJ;AAAA,uBAAKD,IAAI,CAACE,IAAV,eACA;AAAsB,cAAA,OAAO,EAAE,MAAInB,QAAQ,CAACJ,UAAU,CAACqB,IAAI,CAACG,EAAN,CAAX,CAA3C;AAAA;AAAA,eAAaH,IAAI,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA,oBADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADI,yBADJ;AASH,OAVS,CAAH,GAWH,WAbN;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA,kBADF;AAyCD,CA3ED;;GAAMrB,O;UAEWD,W;;;KAFXC,O;AA6EN,eAAeL,OAAO,GAAGK,OAAH,CAAtB,C,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo, deleteTodo } from './actions'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst AddTodo = ({ dispatch }) => {\n\n  const record = useSelector(state => state);\n\n  //   const handleRemoveCourse = course => {\n  //     useSelector({\n  //     type: 'REMOVE_COURSE',\n  //     // payload: course\n  //   });\n  // }\n\n  console.log(record, 'recordddd')\n\n  let input\n\n\n\n  // useEffect(()=>{\n\n  //     list = dispatch({\n  //         type:'TODO',\n  //         payload:state\n  //     })\n  //     console.log(list,'listtttttttttttttt',state)\n  // },[])\n\n\n  useEffect(() => {\n    // console.log(counter,'eeeeeeeeeeeeeeeeeeeeeeeeeeeeee')\n    let data = JSON.parse(localStorage.getItem('persistantState'));\n    console.log(data,'..........................')\n  }, [])\n\n\n  return (\n    <>\n      <div>\n        <form onSubmit={e => {\n          e.preventDefault()\n          if (!input.value.trim()) {\n            return\n          }\n          dispatch(addTodo(input.value))\n          input.value = ''\n        }}>\n          <input ref={node => input = node} />\n          <button type=\"submit\">\n            Add Todo\n          </button>\n        </form>\n       \n        {/* <button onClick={() => dispatch({ type: 'TODO' })} type=\"button\">+</button> */}\n\n\n\n      </div>\n\n      <div>\n        <h4>data</h4>\n        {record ? record.map((item,index)=>{\n            return(\n                <>\n            <li>{item.text}\n            <button key={item.id} onClick={()=>dispatch(deleteTodo(item.id))}>delete</button>\n            {/* <button onClick={() => handleRemoveCourse()}>delete</button> */}\n            </li>\n            \n                </>\n            )\n        }\n        ) : 'no record'}\n\n      </div>\n    </>\n  )\n}\n\nexport default connect()(AddTodo)\n\n\n\n\n\n\n// let data = [];\n// data = JSON.parse(localStorage.getItem('data'))\n// console.log(data,'=========================')\n// return data.map(todo => {\n//     return (todo)\n// }\n\n// )\n//  (todo.id === action.id)\n// ? {...todo, completed: !todo.completed}\n// : todo\n"]},"metadata":{},"sourceType":"module"}