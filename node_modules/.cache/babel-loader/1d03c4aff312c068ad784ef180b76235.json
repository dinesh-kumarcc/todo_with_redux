{"ast":null,"code":"var _jsxFileName = \"/home/codecorners/demo/redux-todo-app (another copy)/src/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo, deleteTodo, toDoo } from './actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddTodo = _ref => {\n  _s();\n\n  let {\n    todos\n  } = _ref;\n  const dispatch = useDispatch();\n  const data = todos.id.reducers;\n  console.log(todos, 'todooooos', data); // const record = useSelector(state => state);\n  // let input\n\n  const [input, setInput] = useState('');\n\n  const updateInput = input => {\n    setInput(input);\n  };\n\n  const handleAddTodo = () => {\n    dispatch(addTodo(input));\n    setInput(input);\n  }; //   useEffect(() => {\n  //     let data = JSON.parse(localStorage.getItem('persistantState'));\n  //     // console.log(data,'..........................')\n  //   }, [])\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => updateInput(e.target.value),\n        value: input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTodo,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), data ? data.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.text, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => dispatch(deleteTodo(item.id)),\n              children: \"delete\"\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      }) : 'no record']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddTodo, \"T3kzek+PTX/eo1kU07shJLJPOPQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddTodo;\n\nconst mapStateToProps = item => {\n  const todos = toDoo(item);\n  return {\n    todos\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addTodo\n})(AddTodo); // import React, { useEffect, useState } from 'react'\n// import { connect } from 'react-redux'\n// import { addTodo, deleteTodo, toDoo,toBlog } from './actions'\n// import { useDispatch, useSelector } from 'react-redux'\n// const AddTodo = ({ todos }) => {\n//   const dispatch = useDispatch()\n//   useEffect(()=>{\n//     console.log(todos, 'todosLocal')\n//   },[])\n//   // const record = useSelector(state => state);\n//   // let input\n//   const [input, setInput] = useState('');\n//   const updateInput = input => {\n//     setInput(input)\n//   }\n//   const handleAddTodo = () => {\n//     dispatch(addTodo(input));\n//     setInput(input)\n//   }\n//   // useEffect(() => {\n//   //   let data = JSON.parse(localStorage.getItem('persistantState'));\n//   //   // console.log(data,'..........................')\n//   // }, [])\n//   return (\n//     <>\n//       <div>\n//         <input onChange={(e) => updateInput(e.target.value)} value={input} />\n//         <button onClick={handleAddTodo}>Add Item</button>\n//       </div>\n//       <div>\n//         <h4>data</h4>\n//         {/* {todos ? todos.id.reducer.map((item, index) => {\n//           return (\n//             <>\n//               <li>{item.text}\n//                 <button key={item.id} onClick={() => dispatch(deleteTodo(item.id))}>delete</button>\n//               </li>\n//             </>\n//           )\n//         }\n//         ) : 'no record'} */}\n//       </div>\n//     </>\n//   )\n// }\n// const mapStateToProps = (item) => {\n//   const todos = toDoo(item);\n//   return { todos };\n// }\n// export default connect(mapStateToProps, { addTodo })(AddTodo)\n// let data = [];\n// data = JSON.parse(localStorage.getItem('data'))\n// console.log(data,'=========================')\n// return data.map(todo => {\n//     return (todo)\n// }\n// )\n//  (todo.id === action.id)\n// ? {...todo, completed: !todo.completed}\n// : todo\n\n{\n  /* <form onSubmit={e => {\n           e.preventDefault()\n           if (!input.value.trim()) {\n             return\n           }\n           dispatch(addTodo(input.value))\n           input.value = ''\n         }}>\n           <input ref={node => input = node} />\n           <button type=\"submit\">\n             Add Todo\n           </button>\n         </form>\n         */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/home/codecorners/demo/redux-todo-app (another copy)/src/Todo.js"],"names":["React","useEffect","useState","connect","addTodo","deleteTodo","toDoo","useDispatch","useSelector","AddTodo","todos","dispatch","data","id","reducers","console","log","input","setInput","updateInput","handleAddTodo","e","target","value","map","item","index","text","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo, deleteTodo, toDoo } from './actions'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst AddTodo = ({ todos }) => {\n  const dispatch = useDispatch()\n\n  const data = todos.id.reducers\n\n  console.log(todos, 'todooooos',data)\n\n  // const record = useSelector(state => state);\n  // let input\n\n  const [input, setInput] = useState('');\n\n  const updateInput = input => {\n    setInput(input)\n  }\n\n  const handleAddTodo = () => {\n    dispatch(addTodo(input));\n    setInput(input)\n  }\n\n\n//   useEffect(() => {\n//     let data = JSON.parse(localStorage.getItem('persistantState'));\n//     // console.log(data,'..........................')\n//   }, [])\n\n\n  return (\n    <>\n      <div>\n          \n\n        <input onChange={(e) => updateInput(e.target.value)} value={input} />\n        <button onClick={handleAddTodo}>Add</button>\n\n      </div>\n\n      <div>\n        <h4>data</h4>\n        {data ? data.map((item, index) => {\n          return (\n            <>\n              <li>{item.text}\n                <button key={item.id} onClick={() => dispatch(deleteTodo(item.id))}>delete</button>\n              </li>\n\n            </>\n          )\n        }\n        ) : 'no record'}\n\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = (item) => {\n  const todos = toDoo(item);\n  return { todos };\n}\n\nexport default connect(mapStateToProps, { addTodo })(AddTodo)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react'\n// import { connect } from 'react-redux'\n// import { addTodo, deleteTodo, toDoo,toBlog } from './actions'\n// import { useDispatch, useSelector } from 'react-redux'\n\n// const AddTodo = ({ todos }) => {\n//   const dispatch = useDispatch()\n\n//   useEffect(()=>{\n\n//     console.log(todos, 'todosLocal')\n//   },[])\n\n\n//   // const record = useSelector(state => state);\n//   // let input\n\n//   const [input, setInput] = useState('');\n\n//   const updateInput = input => {\n//     setInput(input)\n//   }\n\n//   const handleAddTodo = () => {\n//     dispatch(addTodo(input));\n//     setInput(input)\n//   }\n\n\n//   // useEffect(() => {\n//   //   let data = JSON.parse(localStorage.getItem('persistantState'));\n//   //   // console.log(data,'..........................')\n//   // }, [])\n\n\n//   return (\n//     <>\n//       <div>\n\n//         <input onChange={(e) => updateInput(e.target.value)} value={input} />\n//         <button onClick={handleAddTodo}>Add Item</button>\n\n//       </div>\n\n//       <div>\n//         <h4>data</h4>\n//         {/* {todos ? todos.id.reducer.map((item, index) => {\n//           return (\n//             <>\n//               <li>{item.text}\n//                 <button key={item.id} onClick={() => dispatch(deleteTodo(item.id))}>delete</button>\n//               </li>\n\n//             </>\n//           )\n//         }\n//         ) : 'no record'} */}\n\n//       </div>\n//     </>\n//   )\n// }\n\n// const mapStateToProps = (item) => {\n//   const todos = toDoo(item);\n//   return { todos };\n// }\n\n// export default connect(mapStateToProps, { addTodo })(AddTodo)\n\n\n\n\n\n\n// let data = [];\n// data = JSON.parse(localStorage.getItem('data'))\n// console.log(data,'=========================')\n// return data.map(todo => {\n//     return (todo)\n// }\n\n// )\n//  (todo.id === action.id)\n// ? {...todo, completed: !todo.completed}\n// : todo\n\n\n{/* <form onSubmit={e => {\n          e.preventDefault()\n          if (!input.value.trim()) {\n            return\n          }\n          dispatch(addTodo(input.value))\n          input.value = ''\n        }}>\n          <input ref={node => input = node} />\n          <button type=\"submit\">\n            Add Todo\n          </button>\n        </form>\n        */}"]},"metadata":{},"sourceType":"module"}