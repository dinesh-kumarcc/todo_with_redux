{"ast":null,"code":"var _jsxFileName = \"/home/codecorners/demo/redux-todo-app/src/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo, toDo } from './actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddTodo = _ref => {\n  _s();\n\n  let {\n    dispatch\n  } = _ref;\n  const record = useSelector(state => state.data);\n  console.log(record, 'recordddd'); // const dispatch = useDispatch();\n\n  let input; // useEffect(()=>{\n  //     list = dispatch({\n  //         type:'TODO',\n  //         payload:state\n  //     })\n  //     console.log(list,'listtttttttttttttt',state)\n  // },[])\n\n  useEffect(() => {\n    // console.log(counter,'eeeeeeeeeeeeeeeeeeeeeeeeeeeeee')\n    let data = JSON.parse(localStorage.getItem('persistantState')); // console.log(data,'..........................')\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n\n          if (!input.value.trim()) {\n            return;\n          }\n\n          dispatch(addTodo(input.value));\n          input.value = '';\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: node => input = node\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: 'TODO'\n        }),\n        type: \"button\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), record ? record.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.text, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => dispatch({\n                type: 'REMOVE_TODO'\n              }),\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      }) : 'no record']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddTodo, \"HEzVxdeiqp+M5VyQDzfoCKHjLHc=\", false, function () {\n  return [useSelector];\n});\n\n_c = AddTodo;\nexport default connect()(AddTodo); // let data = [];\n// data = JSON.parse(localStorage.getItem('data'))\n// console.log(data,'=========================')\n// return data.map(todo => {\n//     return (todo)\n// }\n// )\n//  (todo.id === action.id)\n// ? {...todo, completed: !todo.completed}\n// : todo\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/home/codecorners/demo/redux-todo-app/src/Todo.js"],"names":["React","useEffect","connect","addTodo","toDo","useDispatch","useSelector","AddTodo","dispatch","record","state","data","console","log","input","JSON","parse","localStorage","getItem","e","preventDefault","value","trim","node","type","map","item","index","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA6B,WAA7B;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;;;;AAEA,MAAMC,OAAO,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC9B,QAAMC,MAAM,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAAmB,WAAnB,EAF8B,CAI9B;;AACA,MAAIK,KAAJ,CAL8B,CAS9B;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGAb,EAAAA,SAAS,CAAC,MAAI;AACV;AACA,QAAIU,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAX,CAFU,CAGV;AACH,GAJQ,EAIP,EAJO,CAAT;AAOF,sBACI;AAAA,4BACF;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAEC,CAAC,IAAI;AACnBA,UAAAA,CAAC,CAACC,cAAF;;AACA,cAAI,CAACN,KAAK,CAACO,KAAN,CAAYC,IAAZ,EAAL,EAAyB;AACvB;AACD;;AACDd,UAAAA,QAAQ,CAACL,OAAO,CAACW,KAAK,CAACO,KAAP,CAAR,CAAR;AACAP,UAAAA,KAAK,CAACO,KAAN,GAAc,EAAd;AACD,SAPD;AAAA,gCAQE;AAAO,UAAA,GAAG,EAAEE,IAAI,IAAIT,KAAK,GAAGS;AAA5B;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAQ,QAAA,OAAO,EAAE,MAAMf,QAAQ,CAAC;AAAEgB,UAAAA,IAAI,EAAE;AAAR,SAAD,CAA/B;AAAmD,QAAA,IAAI,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,eAqBF;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKf,MAAM,GAAGA,MAAM,CAACgB,GAAP,CAAW,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC/B,4BACI;AAAA,iCACJ;AAAA,uBAAKD,IAAI,CAACE,IAAV,eACA;AAAQ,cAAA,OAAO,EAAE,MAAIpB,QAAQ,CAAC;AAACgB,gBAAAA,IAAI,EAAC;AAAN,eAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADI,yBADJ;AAQH,OATS,CAAH,GAUH,WAZR;AAAA;AAAA;AAAA;AAAA;AAAA,YArBE;AAAA,kBADJ;AAuCD,CAjED;;GAAMjB,O;UACaD,W;;;KADbC,O;AAmEN,eAAeL,OAAO,GAAGK,OAAH,CAAtB,C,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo ,toDo} from './actions'\nimport { useDispatch,useSelector } from 'react-redux'\n\nconst AddTodo = ({ dispatch }) => {\n    const record = useSelector(state => state.data);\n    console.log(record,'recordddd')\n    \n    // const dispatch = useDispatch();\n    let input\n    \n\n\n    // useEffect(()=>{\n\n    //     list = dispatch({\n    //         type:'TODO',\n    //         payload:state\n    //     })\n    //     console.log(list,'listtttttttttttttt',state)\n    // },[])\n\n\n    useEffect(()=>{\n        // console.log(counter,'eeeeeeeeeeeeeeeeeeeeeeeeeeeeee')\n        let data = JSON.parse(localStorage.getItem('persistantState'));\n        // console.log(data,'..........................')\n    },[])\n       \n\n  return (\n      <>\n    <div>\n      <form onSubmit={e => {\n        e.preventDefault()\n        if (!input.value.trim()) {\n          return\n        }\n        dispatch(addTodo(input.value))\n        input.value = ''\n      }}>\n        <input ref={node => input = node} />\n        <button type=\"submit\">\n          Add Todo\n        </button>\n      </form>\n      <button onClick={() => dispatch({ type: 'TODO' })} type=\"button\">+</button>\n\n  \n\n    </div>\n    \n    <div>\n        <h4>data</h4>\n        {record ? record.map((item,index)=>{\n            return(\n                <>\n            <li>{item.text}\n            <button onClick={()=>dispatch({type:'REMOVE_TODO'})}>delete</button>\n            </li>\n            \n                </>\n            )\n        }\n        ) : 'no record'}\n        \n    </div>\n    </>\n  )\n}\n\nexport default connect()(AddTodo)\n\n\n\n\n\n\n// let data = [];\n// data = JSON.parse(localStorage.getItem('data'))\n// console.log(data,'=========================')\n// return data.map(todo => {\n//     return (todo)\n// }\n\n// )\n//  (todo.id === action.id)\n// ? {...todo, completed: !todo.completed}\n// : todo\n"]},"metadata":{},"sourceType":"module"}