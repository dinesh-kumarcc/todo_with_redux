{"ast":null,"code":"const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action, '---------------', state);\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [...state, {\n        id: action.id,\n        text: action.text\n      }, localStorage.setItem('data', JSON.stringify(state))];\n\n    case 'TODO':\n      return state.map(todo => // console.log(todo,'todo')\n      todo.id === action.id ? { ...todo\n      } : todo);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer; // import { HANDLE_ADD } from \"./actions\";\n// const initialState = {\n//     note : ''\n// }\n// function reducer(state = initialState, action){\n//     switch(action.type){\n//     }\n// }","map":{"version":3,"sources":["/home/codecorners/demo/redux-todo-app/src/reducers.js"],"names":["reducer","state","action","console","log","type","id","text","localStorage","setItem","JSON","stringify","map","todo"],"mappings":"AAAA,MAAMA,OAAO,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAmB,iBAAnB,EAAqCD,KAArC;;AACA,UAAQC,MAAM,CAACG,IAAf;AACE,SAAK,UAAL;AACE,aAAO,CACL,GAAGJ,KADE,EAEL;AACEK,QAAAA,EAAE,EAAEJ,MAAM,CAACI,EADb;AAEEC,QAAAA,IAAI,EAAEL,MAAM,CAACK;AAFf,OAFK,EAMLC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BC,IAAI,CAACC,SAAL,CAAeV,KAAf,CAA5B,CANK,CAAP;;AASA,SAAK,MAAL;AACA,aAAOA,KAAK,CAACW,GAAN,CAAUC,IAAI,IACjB;AACDA,MAAAA,IAAI,CAACP,EAAL,KAAYJ,MAAM,CAACI,EAApB,GACI,EAAC,GAAGO;AAAJ,OADJ,GAEIA,IAJC,CAAP;;AAMF;AACE,aAAOZ,KAAP;AAnBJ;AAqBD,CAvBH;;AAyBE,eAAeD,OAAf,C,CAGF;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA","sourcesContent":["const reducer = (state = [], action) => {\n    console.log(action,'---------------',state)\n    switch (action.type) {\n      case 'ADD_TODO':\n        return [\n          ...state,\n          {\n            id: action.id,\n            text: action.text\n          },\n          localStorage.setItem('data',JSON.stringify(state))\n        ]     \n\n        case 'TODO':\n        return state.map(todo =>\n            // console.log(todo,'todo')\n          (todo.id === action.id)\n            ? {...todo}\n            : todo\n        )\n      default:\n        return state\n    }\n  }\n  \n  export default reducer\n\n\n// import { HANDLE_ADD } from \"./actions\";\n\n// const initialState = {\n//     note : ''\n// }\n\n// function reducer(state = initialState, action){\n//     switch(action.type){\n\n//     }\n// }"]},"metadata":{},"sourceType":"module"}