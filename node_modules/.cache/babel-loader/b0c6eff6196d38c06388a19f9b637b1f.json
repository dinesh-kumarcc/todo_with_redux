{"ast":null,"code":"const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action, '---------------', state);\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [...state, {\n        id: action.id,\n        text: action.text\n      }];\n\n    case 'TODO':\n      let data = JSON.parse(localStorage.getItem('persistantState'));\n      console.log(data, 'datataaaaaaaaaaaaaaaa');\n      return data.map(todo => // console.log(todo,'todo')\n      todo.id === action.id ? { ...todo,\n        completed: !todo.completed\n      } : todo);\n\n    default:\n      return state;\n    // localStorage.setItem('data',JSON.stringify(state))\n  }\n};\n\nexport default reducer; // import { HANDLE_ADD } from \"./actions\";\n// const initialState = {\n//     note : ''\n// }\n// function reducer(state = initialState, action){\n//     switch(action.type){\n//     }\n// }","map":{"version":3,"sources":["/home/codecorners/demo/redux-todo-app/src/reducers.js"],"names":["reducer","state","action","console","log","type","id","text","data","JSON","parse","localStorage","getItem","map","todo","completed"],"mappings":"AAAA,MAAMA,OAAO,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAmB,iBAAnB,EAAqCD,KAArC;;AACA,UAAQC,MAAM,CAACG,IAAf;AACE,SAAK,UAAL;AACE,aAAO,CACL,GAAGJ,KADE,EAEL;AACEK,QAAAA,EAAE,EAAEJ,MAAM,CAACI,EADb;AAEEC,QAAAA,IAAI,EAAEL,MAAM,CAACK;AAFf,OAFK,CAAP;;AAQA,SAAK,MAAL;AACI,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAX;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ,EAAiB,uBAAjB;AACJ,aAAOA,IAAI,CAACK,GAAL,CAASC,IAAI,IAChB;AACDA,MAAAA,IAAI,CAACR,EAAL,KAAYJ,MAAM,CAACI,EAApB,GACI,EAAC,GAAGQ,IAAJ;AAAUC,QAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAA3B,OADJ,GAEID,IAJC,CAAP;;AAMF;AACE,aAAOb,KAAP;AACA;AArBJ;AAuBD,CAzBH;;AA2BE,eAAeD,OAAf,C,CAGF;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA","sourcesContent":["const reducer = (state = [], action) => {\n    console.log(action,'---------------',state)\n    switch (action.type) {\n      case 'ADD_TODO':\n        return [\n          ...state,\n          {\n            id: action.id,\n            text: action.text\n          }\n        ]     \n\n        case 'TODO':\n            let data = JSON.parse(localStorage.getItem('persistantState'))\n            console.log(data,'datataaaaaaaaaaaaaaaa')\n        return data.map(todo =>\n            // console.log(todo,'todo')\n          (todo.id === action.id)\n            ? {...todo, completed: !todo.completed}\n            : todo\n        )\n      default:\n        return state\n        // localStorage.setItem('data',JSON.stringify(state))\n    }\n  }\n  \n  export default reducer\n\n\n// import { HANDLE_ADD } from \"./actions\";\n\n// const initialState = {\n//     note : ''\n// }\n\n// function reducer(state = initialState, action){\n//     switch(action.type){\n\n//     }\n// }"]},"metadata":{},"sourceType":"module"}