{"ast":null,"code":"const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // console.log(action, '---------------', state)\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [...state, {\n        id: action.id,\n        text: action.text\n      }];\n\n    case 'TODO':\n      let data = JSON.parse(localStorage.getItem('persistantState')); // console.log(data, 'datataaaaaaaaaaaaa=============aaa')\n\n      return data;\n    // case 'FETCH_PRODUCTS_SUCCESS':\n    //     let list = JSON.parse(localStorage.getItem('persistantState'))\n    //     return {\n    //         ...state,\n    //         state: action.payload.list\n    //     };\n    // case 'TOGGLE_TODO':\n    //     return state.map(todo =>\n    //         (todo.id === action.id)\n    //             ? { ...todo, completed: !todo.completed }\n    //             : todo\n    //     )\n\n    default:\n      return state;\n    // localStorage.setItem('data',JSON.stringify(state))\n  }\n};\n\nexport default reducer; // import { HANDLE_ADD } from \"./actions\";\n// const initialState = {\n//     note : ''\n// }\n// function reducer(state = initialState, action){\n//     switch(action.type){\n//     }\n// }","map":{"version":3,"sources":["/home/codecorners/demo/redux-todo-app/src/reducers.js"],"names":["reducer","state","action","type","id","text","data","JSON","parse","localStorage","getItem"],"mappings":"AAAA,MAAMA,OAAO,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,CACH,GAAGF,KADA,EAEH;AACIG,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADf;AAEIC,QAAAA,IAAI,EAAEH,MAAM,CAACG;AAFjB,OAFG,CAAP;;AAQJ,SAAK,MAAL;AACI,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAX,CADJ,CAEI;;AACA,aAAOJ,IAAP;AAGJ;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACI,aAAOL,KAAP;AACJ;AAhCJ;AAkCH,CApCD;;AAsCA,eAAeD,OAAf,C,CAGA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA","sourcesContent":["const reducer = (state = [], action) => {\n    // console.log(action, '---------------', state)\n    switch (action.type) {\n        case 'ADD_TODO':\n            return [\n                ...state,\n                {\n                    id: action.id,\n                    text: action.text\n                }\n            ]\n\n        case 'TODO':\n            let data = JSON.parse(localStorage.getItem('persistantState'))\n            // console.log(data, 'datataaaaaaaaaaaaa=============aaa')\n            return data;\n\n\n        // case 'FETCH_PRODUCTS_SUCCESS':\n        //     let list = JSON.parse(localStorage.getItem('persistantState'))\n        //     return {\n        //         ...state,\n        //         state: action.payload.list\n        //     };\n\n        // case 'TOGGLE_TODO':\n        //     return state.map(todo =>\n        //         (todo.id === action.id)\n        //             ? { ...todo, completed: !todo.completed }\n        //             : todo\n        //     )\n\n        default:\n            return state\n        // localStorage.setItem('data',JSON.stringify(state))\n    }\n}\n\nexport default reducer\n\n\n// import { HANDLE_ADD } from \"./actions\";\n\n// const initialState = {\n//     note : ''\n// }\n\n// function reducer(state = initialState, action){\n//     switch(action.type){\n\n//     }\n// }"]},"metadata":{},"sourceType":"module"}