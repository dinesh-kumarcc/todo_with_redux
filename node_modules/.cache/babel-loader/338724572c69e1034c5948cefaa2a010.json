{"ast":null,"code":"const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action, '---------------', state);\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [...state, {\n        id: action.id,\n        text: action.text\n      }];\n\n    case 'TODO':\n      let data = JSON.parse(localStorage.getItem('persistantState'));\n      console.log(data, 'dataaaaaaaaaa');\n      return data;\n\n    case 'REMOVE_TODO':\n      //    return{\n      //     id: action.id,\n      //     ...state.slice(action.id, 1)\n      //    }\n      return state.id.filter(_ref => {\n        let {\n          id\n        } = _ref;\n        return id !== action.id;\n      });\n    // const handleDelete = (id) => {\n    //     let list = JSON.parse(localStorage.getItem('data')) || [];\n    //     const updatedList = list.filter((list) => list.id !== id);\n    //     const updatedRecords = userRecord.filter((record) => record.id !== id);\n    //     setUserRecord(updatedRecords);\n    //     localStorage.setItem('data', JSON.stringify(updatedList));\n    // }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer; // import { HANDLE_ADD } from \"./actions\";\n// const initialState = {\n//     note : ''\n// }\n// function reducer(state = initialState, action){\n//     switch(action.type){\n//     }\n// }","map":{"version":3,"sources":["/home/codecorners/demo/redux-todo-app/src/reducers.js"],"names":["reducer","state","action","console","log","type","id","text","data","JSON","parse","localStorage","getItem","filter"],"mappings":"AAAA,MAAMA,OAAO,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAmB,iBAAnB,EAAqCD,KAArC;;AACA,UAAQC,MAAM,CAACG,IAAf;AACE,SAAK,UAAL;AACE,aAAO,CACL,GAAGJ,KADE,EAEL;AACEK,QAAAA,EAAE,EAAEJ,MAAM,CAACI,EADb;AAEEC,QAAAA,IAAI,EAAEL,MAAM,CAACK;AAFf,OAFK,CAAP;;AAQA,SAAK,MAAL;AACI,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAX;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ,EAAiB,eAAjB;AACA,aAAOA,IAAP;;AAEA,SAAK,aAAL;AACA;AACA;AACA;AACA;AACA,aAAOP,KAAK,CAACK,EAAN,CAASO,MAAT,CAAgB;AAAA,YAAC;AAACP,UAAAA;AAAD,SAAD;AAAA,eAAUA,EAAE,KAAKJ,MAAM,CAACI,EAAxB;AAAA,OAAhB,CAAP;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;;AAEV;AACE,aAAOL,KAAP;AA/BJ;AAiCD,CAnCH;;AAqCE,eAAeD,OAAf,C,CAGF;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA","sourcesContent":["const reducer = (state = [], action) => {\n    console.log(action,'---------------',state)\n    switch (action.type) {\n      case 'ADD_TODO':\n        return [\n          ...state,\n          {\n            id: action.id,\n            text: action.text\n          }\n        ]     \n\n        case 'TODO':\n            let data = JSON.parse(localStorage.getItem('persistantState'))\n            console.log(data,'dataaaaaaaaaa');\n            return data\n\n            case 'REMOVE_TODO':\n            //    return{\n            //     id: action.id,\n            //     ...state.slice(action.id, 1)\n            //    }\n            return state.id.filter(({id}) => id !== action.id);\n\n                // const handleDelete = (id) => {\n                //     let list = JSON.parse(localStorage.getItem('data')) || [];\n                //     const updatedList = list.filter((list) => list.id !== id);\n                //     const updatedRecords = userRecord.filter((record) => record.id !== id);\n                //     setUserRecord(updatedRecords);\n                //     localStorage.setItem('data', JSON.stringify(updatedList));\n                // }\n        \n      default:\n        return state\n    }\n  }\n  \n  export default reducer\n\n\n// import { HANDLE_ADD } from \"./actions\";\n\n// const initialState = {\n//     note : ''\n// }\n\n// function reducer(state = initialState, action){\n//     switch(action.type){\n\n//     }\n// }"]},"metadata":{},"sourceType":"module"}