{"ast":null,"code":"var _jsxFileName = \"/home/codecorners/demo/redux-todo-app/src/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo, toDo } from './actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddTodo = _ref => {\n  _s();\n\n  let {\n    dispatch\n  } = _ref;\n  const counter = useSelector(state => state); // const dispatch = useDispatch();\n\n  let input;\n  let list = []; // useEffect(()=>{\n  //     list = dispatch({\n  //         type:'TODO',\n  //         payload:state\n  //     })\n  //     console.log(list,'listtttttttttttttt',state)\n  // },[])\n\n  useEffect(() => {\n    console.log(counter, 'eeeeeeeeeeeeeeeeeeeeeeeeeeeeee');\n    let data = JSON.parse(localStorage.getItem('persistantState'));\n    console.log(data, '..........................');\n  }, [counter]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n\n          if (!input.value.trim()) {\n            return;\n          }\n\n          dispatch(addTodo(input.value));\n          input.value = '';\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: node => input = node\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: 'TODO'\n        }),\n        type: \"button\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddTodo, \"i8LDIYDi+D5gpEtk+b/GSIRaoII=\", false, function () {\n  return [useSelector];\n});\n\n_c = AddTodo;\nexport default connect()(AddTodo); // let data = [];\n// data = JSON.parse(localStorage.getItem('data'))\n// console.log(data,'=========================')\n// return data.map(todo => {\n//     return (todo)\n// }\n// )\n//  (todo.id === action.id)\n// ? {...todo, completed: !todo.completed}\n// : todo\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/home/codecorners/demo/redux-todo-app/src/Todo.js"],"names":["React","useEffect","connect","addTodo","toDo","useDispatch","useSelector","AddTodo","dispatch","counter","state","input","list","console","log","data","JSON","parse","localStorage","getItem","e","preventDefault","value","trim","node","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA6B,WAA7B;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;;;;AAEA,MAAMC,OAAO,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC9B,QAAMC,OAAO,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAV,CAA3B,CAD8B,CAG9B;;AACA,MAAIC,KAAJ;AACA,MAAIC,IAAI,GAAG,EAAX,CAL8B,CAQ9B;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGAX,EAAAA,SAAS,CAAC,MAAI;AACVY,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ,EAAoB,gCAApB;AACA,QAAIM,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAX;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ,EAAiB,4BAAjB;AACH,GAJQ,EAIP,CAACN,OAAD,CAJO,CAAT;AAOF,sBACI;AAAA,4BACF;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAEW,CAAC,IAAI;AACnBA,UAAAA,CAAC,CAACC,cAAF;;AACA,cAAI,CAACV,KAAK,CAACW,KAAN,CAAYC,IAAZ,EAAL,EAAyB;AACvB;AACD;;AACDf,UAAAA,QAAQ,CAACL,OAAO,CAACQ,KAAK,CAACW,KAAP,CAAR,CAAR;AACAX,UAAAA,KAAK,CAACW,KAAN,GAAc,EAAd;AACD,SAPD;AAAA,gCAQE;AAAO,UAAA,GAAG,EAAEE,IAAI,IAAIb,KAAK,GAAGa;AAA5B;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAQ,QAAA,OAAO,EAAE,MAAMhB,QAAQ,CAAC;AAAEiB,UAAAA,IAAI,EAAE;AAAR,SAAD,CAA/B;AAAmD,QAAA,IAAI,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,eAqBF;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YArBE;AAAA,kBADJ;AA6BD,CAtDD;;GAAMlB,O;UACcD,W;;;KADdC,O;AAwDN,eAAeL,OAAO,GAAGK,OAAH,CAAtB,C,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo ,toDo} from './actions'\nimport { useDispatch,useSelector } from 'react-redux'\n\nconst AddTodo = ({ dispatch }) => {\n    const counter = useSelector(state => state)\n    \n    // const dispatch = useDispatch();\n    let input\n    let list = [];\n\n\n    // useEffect(()=>{\n\n    //     list = dispatch({\n    //         type:'TODO',\n    //         payload:state\n    //     })\n    //     console.log(list,'listtttttttttttttt',state)\n    // },[])\n\n\n    useEffect(()=>{\n        console.log(counter,'eeeeeeeeeeeeeeeeeeeeeeeeeeeeee')\n        let data = JSON.parse(localStorage.getItem('persistantState'));\n        console.log(data,'..........................')\n    },[counter])\n       \n\n  return (\n      <>\n    <div>\n      <form onSubmit={e => {\n        e.preventDefault()\n        if (!input.value.trim()) {\n          return\n        }\n        dispatch(addTodo(input.value))\n        input.value = ''\n      }}>\n        <input ref={node => input = node} />\n        <button type=\"submit\">\n          Add Todo\n        </button>\n      </form>\n      <button onClick={() => dispatch({ type: 'TODO' })} type=\"button\">+</button>\n\n  \n\n    </div>\n    \n    <div>\n        <h4>data</h4>\n        {/* {list ? list.map((data)=><h2>{data.text}</h2>) : 'no record'} */}\n        \n    </div>\n    </>\n  )\n}\n\nexport default connect()(AddTodo)\n\n\n\n\n\n\n// let data = [];\n// data = JSON.parse(localStorage.getItem('data'))\n// console.log(data,'=========================')\n// return data.map(todo => {\n//     return (todo)\n// }\n\n// )\n//  (todo.id === action.id)\n// ? {...todo, completed: !todo.completed}\n// : todo\n"]},"metadata":{},"sourceType":"module"}