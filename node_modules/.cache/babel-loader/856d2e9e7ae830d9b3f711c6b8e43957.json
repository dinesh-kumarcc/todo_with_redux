{"ast":null,"code":"var _jsxFileName = \"/home/codecorners/demo/redux-todo-app/src/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo, toDo } from './actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddTodo = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  let input;\n  let list = [];\n  const dispatch = useDispatch();\n  useEffect(() => {\n    list = dispatch({\n      type: 'TODO',\n      payload: data\n    });\n    console.log(list, 'listtttttttttttttt', data);\n  }, []);\n  const content = useSelector(state => state.toDo);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n\n          if (!input.value.trim()) {\n            return;\n          }\n\n          dispatch(addTodo(input.value));\n          input.value = '';\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: node => input = node\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: 'TODO'\n        }),\n        type: \"button\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), list ? list.map(data => /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 34\n      }, this)) : 'no record']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddTodo, \"OiLXh0U4yBJwBWerT3aE2OUx7OU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddTodo;\nexport default connect()(AddTodo); // let data = [];\n// data = JSON.parse(localStorage.getItem('data'))\n// console.log(data,'=========================')\n// return data.map(todo => {\n//     return (todo)\n// }\n// )\n//  (todo.id === action.id)\n// ? {...todo, completed: !todo.completed}\n// : todo\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/home/codecorners/demo/redux-todo-app/src/Todo.js"],"names":["React","useEffect","connect","addTodo","toDo","useDispatch","useSelector","AddTodo","data","input","list","dispatch","type","payload","console","log","content","state","e","preventDefault","value","trim","node","map","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA6B,WAA7B;AAEA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;;;;AAEA,MAAMC,OAAO,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC1B,MAAIC,KAAJ;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEAJ,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,IAAI,GAAGC,QAAQ,CAAC;AACZC,MAAAA,IAAI,EAAC,MADO;AAEZC,MAAAA,OAAO,EAACL;AAFI,KAAD,CAAf;AAIAM,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAiB,oBAAjB,EAAsCF,IAAtC;AACH,GANQ,EAMP,EANO,CAAT;AAQA,QAAMQ,OAAO,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACb,IAAhB,CAA3B;AAGF,sBACI;AAAA,4BACF;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAEc,CAAC,IAAI;AACnBA,UAAAA,CAAC,CAACC,cAAF;;AACA,cAAI,CAACV,KAAK,CAACW,KAAN,CAAYC,IAAZ,EAAL,EAAyB;AACvB;AACD;;AACDV,UAAAA,QAAQ,CAACR,OAAO,CAACM,KAAK,CAACW,KAAP,CAAR,CAAR;AACAX,UAAAA,KAAK,CAACW,KAAN,GAAc,EAAd;AACD,SAPD;AAAA,gCAQE;AAAO,UAAA,GAAG,EAAEE,IAAI,IAAIb,KAAK,GAAGa;AAA5B;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAQ,QAAA,OAAO,EAAE,MAAMX,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAD,CAA/B;AAAmD,QAAA,IAAI,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,eAiCF;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKF,IAAI,GAAGA,IAAI,CAACa,GAAL,CAAUf,IAAD,iBAAQ;AAAA,kBAAKA,IAAI,CAACgB;AAAV;AAAA;AAAA;AAAA;AAAA,cAAjB,CAAH,GAA4C,WAFrD;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCE;AAAA,kBADJ;AAyCD,CAzDD;;GAAMjB,O;UAGeF,W,EAUDC,W;;;KAbdC,O;AA2DN,eAAeL,OAAO,GAAGK,OAAH,CAAtB,C,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo ,toDo} from './actions'\n\nimport { useDispatch,useSelector } from 'react-redux'\n\nconst AddTodo = ({ data }) => {\n    let input\n    let list = [];\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        list = dispatch({\n            type:'TODO',\n            payload:data\n        })\n        console.log(list,'listtttttttttttttt',data)\n    },[])\n\n    const content = useSelector(state => state.toDo);\n       \n\n  return (\n      <>\n    <div>\n      <form onSubmit={e => {\n        e.preventDefault()\n        if (!input.value.trim()) {\n          return\n        }\n        dispatch(addTodo(input.value))\n        input.value = ''\n      }}>\n        <input ref={node => input = node} />\n        <button type=\"submit\">\n          Add Todo\n        </button>\n      </form>\n      <button onClick={() => dispatch({ type: 'TODO' })} type=\"button\">+</button>\n\n\n\n      {/* <ul>\n    {todos.map(todo =>\n      <Todo\n        key={todo.id}\n        {...todo}\n        onClick={() => toggleTodo(todo.id)}\n      />\n    )}\n  </ul> */}\n\n  \n\n    </div>\n    \n    <div>\n        <h4>data</h4>\n        {list ? list.map((data)=><h2>{data.text}</h2>) : 'no record'}\n        \n    </div>\n    </>\n  )\n}\n\nexport default connect()(AddTodo)\n\n\n\n\n\n\n// let data = [];\n// data = JSON.parse(localStorage.getItem('data'))\n// console.log(data,'=========================')\n// return data.map(todo => {\n//     return (todo)\n// }\n\n// )\n//  (todo.id === action.id)\n// ? {...todo, completed: !todo.completed}\n// : todo\n"]},"metadata":{},"sourceType":"module"}