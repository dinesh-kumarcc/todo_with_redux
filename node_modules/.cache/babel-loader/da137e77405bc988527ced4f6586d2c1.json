{"ast":null,"code":"var _jsxFileName = \"/home/codecorners/demo/redux-todo-app/src/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo, toDo } from './actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddTodo = _ref => {\n  _s();\n\n  let {\n    value\n  } = _ref;\n  const dispatch = useDispatch();\n  let input;\n  console.log(input, 'input');\n\n  const mapStateToProps = (state, ownProps) => {\n    console.log(state); // state\n\n    console.log(ownProps); // ownProps\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n\n          if (!input.value.trim()) {\n            return;\n          }\n\n          dispatch(addTodo(input.value));\n          input.value = '';\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: node => input = node\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: 'TODO'\n        }),\n        type: \"button\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddTodo, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", true);\n\n_c = AddTodo;\nexport default connect()(AddTodo); // let data = [];\n// data = JSON.parse(localStorage.getItem('data'))\n// console.log(data,'=========================')\n// return data.map(todo => {\n//     return (todo)\n// }\n// )\n//  (todo.id === action.id)\n// ? {...todo, completed: !todo.completed}\n// : todo\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/home/codecorners/demo/redux-todo-app/src/Todo.js"],"names":["React","connect","addTodo","toDo","AddTodo","value","dispatch","useDispatch","input","console","log","mapStateToProps","state","ownProps","e","preventDefault","trim","node","type"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA6B,WAA7B;;;;AAEA,MAAMC,OAAO,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC3B,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;AACF,MAAIC,KAAJ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAkB,OAAlB;;AAEA,QAAMG,eAAe,GAAC,CAACC,KAAD,EAAQC,QAAR,KAAoB;AACxCJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EADwC,CACrB;;AACnBH,IAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ,EAFwC,CAElB;AACvB,GAHD;;AAKA,sBACI;AAAA,4BACF;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAEC,CAAC,IAAI;AACnBA,UAAAA,CAAC,CAACC,cAAF;;AACA,cAAI,CAACP,KAAK,CAACH,KAAN,CAAYW,IAAZ,EAAL,EAAyB;AACvB;AACD;;AACDV,UAAAA,QAAQ,CAACJ,OAAO,CAACM,KAAK,CAACH,KAAP,CAAR,CAAR;AACAG,UAAAA,KAAK,CAACH,KAAN,GAAc,EAAd;AACD,SAPD;AAAA,gCAQE;AAAO,UAAA,GAAG,EAAEY,IAAI,IAAIT,KAAK,GAAGS;AAA5B;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAQ,QAAA,OAAO,EAAE,MAAMX,QAAQ,CAAC;AAAEY,UAAAA,IAAI,EAAE;AAAR,SAAD,CAA/B;AAAmD,QAAA,IAAI,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,eAiCF;AAAA;AAAA;AAAA;AAAA,YAjCE;AAAA,kBADJ;AAuCD,CAjDD;;GAAMd,O;;KAAAA,O;AAmDN,eAAeH,OAAO,GAAGG,OAAH,CAAtB,C,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo ,toDo} from './actions'\n\nconst AddTodo = ({ value }) => {\n    const dispatch = useDispatch()\n  let input\n  console.log(input,'input')\n\n  const mapStateToProps=(state, ownProps) =>{\n    console.log(state) // state\n    console.log(ownProps) // ownProps\n  }\n\n  return (\n      <>\n    <div>\n      <form onSubmit={e => {\n        e.preventDefault()\n        if (!input.value.trim()) {\n          return\n        }\n        dispatch(addTodo(input.value))\n        input.value = ''\n      }}>\n        <input ref={node => input = node} />\n        <button type=\"submit\">\n          Add Todo\n        </button>\n      </form>\n      <button onClick={() => dispatch({ type: 'TODO' })} type=\"button\">+</button>\n\n\n\n      {/* <ul>\n    {todos.map(todo =>\n      <Todo\n        key={todo.id}\n        {...todo}\n        onClick={() => toggleTodo(todo.id)}\n      />\n    )}\n  </ul> */}\n\n  \n\n    </div>\n    \n    <div>\n        \n    </div>\n    </>\n  )\n}\n\nexport default connect()(AddTodo)\n\n\n\n\n\n\n// let data = [];\n// data = JSON.parse(localStorage.getItem('data'))\n// console.log(data,'=========================')\n// return data.map(todo => {\n//     return (todo)\n// }\n\n// )\n//  (todo.id === action.id)\n// ? {...todo, completed: !todo.completed}\n// : todo\n"]},"metadata":{},"sourceType":"module"}