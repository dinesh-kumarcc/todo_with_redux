{"ast":null,"code":"var _jsxFileName = \"/home/codecorners/demo/redux-todo-app (another copy)/src/Main.js\";\nimport React, { useEffect, useState } from 'react'; // import { connect } from 'react-redux'\n// import { addTodo, deleteTodo, toDo } from './actions'\n// import { useDispatch, useSelector } from 'react-redux'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddTodo = _ref => {\n  let {\n    todos\n  } = _ref;\n  //   const dispatch = useDispatch()\n  console.log(todos, 'todos'); // const record = useSelector(state => state);\n  // let input\n  //   const [input, setInput] = useState('');\n  //   const updateInput = input => {\n  //     setInput(input)\n  //   }\n  //   const handleAddTodo = () => {\n  //     dispatch(addTodo(input));\n  //     setInput(input)\n  //   }\n  //   useEffect(() => {\n  //     let data = JSON.parse(localStorage.getItem('persistantState'));\n  //     // console.log(data,'..........................')\n  //   }, [])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // const mapStateToProps = (item) => {\n//   const todos = toDo(item);\n//   return { todos };\n// }\n// export default connect(mapStateToProps, { addTodo })(AddTodo)\n\n\n_c = AddTodo;\nexport default AddTodo; // let data = [];\n// data = JSON.parse(localStorage.getItem('data'))\n// console.log(data,'=========================')\n// return data.map(todo => {\n//     return (todo)\n// }\n// )\n//  (todo.id === action.id)\n// ? {...todo, completed: !todo.completed}\n// : todo\n\n{\n  /* <form onSubmit={e => {\n           e.preventDefault()\n           if (!input.value.trim()) {\n             return\n           }\n           dispatch(addTodo(input.value))\n           input.value = ''\n         }}>\n           <input ref={node => input = node} />\n           <button type=\"submit\">\n             Add Todo\n           </button>\n         </form>\n         */\n} // import React from 'react'\n// import Todo from './Todo'\n// import Blog from './Blog'\n// function Main () {\n//     return(\n//         <div>\n//             <h4>hhhh</h4>\n//         </div>\n//     )\n// }\n// export default Main\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/home/codecorners/demo/redux-todo-app (another copy)/src/Main.js"],"names":["React","useEffect","useState","AddTodo","todos","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;AACA;AACA;;;;;AAEA,MAAMC,OAAO,GAAG,QAAe;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC/B;AAEEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,OAAnB,EAH6B,CAK7B;AACA;AAEF;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;AAGE,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AA2BD,CArDD,C,CAuDA;AACA;AACA;AACA;AAEA;;;KA5DMD,O;AA6DN,eAAeA,OAAf,C,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAW,C,CAOX;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from 'react'\n// import { connect } from 'react-redux'\n// import { addTodo, deleteTodo, toDo } from './actions'\n// import { useDispatch, useSelector } from 'react-redux'\n\nconst AddTodo = ({ todos }) => {\n//   const dispatch = useDispatch()\n\n  console.log(todos, 'todos')\n\n  // const record = useSelector(state => state);\n  // let input\n\n//   const [input, setInput] = useState('');\n\n//   const updateInput = input => {\n//     setInput(input)\n//   }\n\n//   const handleAddTodo = () => {\n//     dispatch(addTodo(input));\n//     setInput(input)\n//   }\n\n\n//   useEffect(() => {\n//     let data = JSON.parse(localStorage.getItem('persistantState'));\n//     // console.log(data,'..........................')\n//   }, [])\n\n\n  return (\n    <>\n      <div>\n          \n{/* \n        <input onChange={(e) => updateInput(e.target.value)} value={input} />\n        <button onClick={handleAddTodo}>Add</button> */}\n\n      </div>\n\n      <div>\n        <h4>data</h4>\n        {/* {todos ? todos.id.reducer.map((item, index) => {\n          return (\n            <>\n              <li>{item.text}\n                <button key={item.id} onClick={() => dispatch(deleteTodo(item.id))}>delete</button>\n              </li>\n\n            </>\n          )\n        }\n        ) : 'no record'} */}\n\n      </div>\n    </>\n  )\n}\n\n// const mapStateToProps = (item) => {\n//   const todos = toDo(item);\n//   return { todos };\n// }\n\n// export default connect(mapStateToProps, { addTodo })(AddTodo)\nexport default AddTodo\n\n\n\n\n\n\n// let data = [];\n// data = JSON.parse(localStorage.getItem('data'))\n// console.log(data,'=========================')\n// return data.map(todo => {\n//     return (todo)\n// }\n\n// )\n//  (todo.id === action.id)\n// ? {...todo, completed: !todo.completed}\n// : todo\n\n\n{/* <form onSubmit={e => {\n          e.preventDefault()\n          if (!input.value.trim()) {\n            return\n          }\n          dispatch(addTodo(input.value))\n          input.value = ''\n        }}>\n          <input ref={node => input = node} />\n          <button type=\"submit\">\n            Add Todo\n          </button>\n        </form>\n        */}\n\n\n\n\n\n\n// import React from 'react'\n// import Todo from './Todo'\n// import Blog from './Blog'\n\n// function Main () {\n//     return(\n//         <div>\n//             <h4>hhhh</h4>\n//         </div>\n//     )\n// }\n// export default Main"]},"metadata":{},"sourceType":"module"}